openapi: 3.0.1
info:
  title: Visa Card Program Management
  description: ''
  version: '1'
servers:
  - url: https://sandbox.api.visa.com
    description: Sandbox server
security: []
tags:
  - name: 'Visa Card Program Enrollment '
    description: >-
      VCPE supports issuers that want to offer instant/digital issuance or
      re-issuance; as well as allow their cardholders to upgrade and downgrade
      cards in their banking app and enjoy new rewards programs in near
      real-time without needing a physical card and without changing their
      16-digit card number.
paths:
  /vcpe/v2/pan/enrollment:
    post:
      tags:
        - 'Visa Card Program Enrollment '
      summary: Enrollment
      description: Process enrollment and handover message to ALM.
      operationId: enrollmentV2UsingPOST
      parameters:
        - name: Accept
          in: header
          description: >-
            Content-Types that are acceptable for the response. Example-
            application/json
          required: true
          explode: false
          allowReserved: false
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: >-
            List of acceptable languages for the response. Defaults to en-US if
            not present. Example- en-US
          required: false
          explode: false
          allowReserved: false
          schema:
            type: string
        - name: Content-Type
          in: header
          description: The type of the request body. Example- application/json
          required: true
          explode: false
          allowReserved: false
          schema:
            type: string
        - name: Content-Language
          in: header
          description: >-
            The language of the request body. Defaults to en-US if not present.
            Example- en-US
          required: false
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - operationType
                - updateReferenceID
              type: object
              properties:
                operationType:
                  type: string
                  description: >-
                    Type of operation. Format: It is one of the following
                    values: 

                     UPDATE
                enrollmentInfo:
                  type: object
                  properties:
                    cardholderInfo:
                      required:
                        - primaryAccountNumber
                      type: object
                      properties:
                        primaryAccountNumber:
                          maxLength: 19
                          type: string
                          description: Primary account number
                      description: Required
                    accountLevelInfo:
                      type: object
                      properties:
                        productID:
                          maxLength: 2
                          type: string
                          description: >-
                            This is the product ID for the card number in the
                            Account Number field. It is required, when the
                            rpinEnrollment structure is provided in the request,
                            or when the linkEnrollment structure is present for
                            either the USHNW or VIRTUAL groupType. For example
                            if the product type of the card is Visa Traditional
                            Credit, the value of productID is A.
                        linkEnrollment:
                          type: object
                          properties:
                            group:
                              type: array
                              description: Required. Array of Groups
                              items:
                                type: object
                                properties:
                                  action:
                                    type: string
                                    description: >-
                                      (REQUIRED if linkEnrollment segment is
                                      present) 

                                        Action taken on the record for an enrollment link. Format: It is one of the following values: 

                                       Add Record is for a new link. 

                                       Delete Record is for removing a link. 

                                       Change Can only be used to change the Primary Account flag.
                                  groupID:
                                    maxLength: 32
                                    type: string
                                    description: >-
                                      (REQUIRED if linkEnrollment segment is
                                      present) 

                                       Contains the issuer-supplied identifier for the group type specified in the Group Type field. Must not be PAI/PII data. Format: String; alphabetic, numeric, hyphens ( - ), and underscores ( _) [a-zA-Z0-9-_ ].
                                  groupType:
                                    type: string
                                    description: >-
                                      (REQUIRED if linkEnrollment segment is
                                      present) 

                                       Group type. Format: It is one of the following values:
                                      LOC Groups a primary card account with
                                      authorized accounts from other
                                      cardholders. 

                                       CUSTOMER Groups a set of card accounts for the same cardholder. 

                                       VIRTUAL Groups a primary card account with a set of virtual cards. 

                                       Note: A value for productID must be specified. Contact your Visa representative before 

                                       submitting a request using the VIRTUAL Group Type. 

                                       USHNW 

                                       Note: A value for productID must be specified.
                                       A variety of customized Group Types may be available, depending on region, issuer, or other criteria. Additional Group Types and values for those Group Types may be required, depending on region, issuer, or other criteria. For information on these Group Types, see their respective Product Implementation Guides. Issuers should consult the respective Product Implementation Guides for details on how to submit primary/supplementary flags to generate accurate billing information for those related products with associated card fees. For more information, contact your Visa representative.
                                  isPrimaryAccount:
                                    type: string
                                    description: >-
                                      (Conditional) Whether the account the
                                      account number is to be the primary
                                      account number in the group.. Used for
                                      group types that have a primary or owner
                                      account. It is required when groupType is
                                      LOC, or VIRTUAL. It should be set to Y for
                                      Primary (physical plastic card). Issuers
                                      should refer to the Product Implementation
                                      Guide for requirements related to custom
                                      group types. Format: It is one of the
                                      following values: 

                                       Y The account number is to be the primary account number in the group. 

                                       BlankThe account number is not the primary account number.
                          description: >-
                            Optional. Contains linking information for the
                            account number. Link enrollment information is not
                            required when sending request only for RPIN
                            enrollment or replace enrollment.
                        rpinEnrollment:
                          type: object
                          properties:
                            rpin:
                              maxLength: 6
                              type: string
                              description: |2-
                                 (REQUIRED if rpinEnrollment segment is present)  

                                 The six-digit Visa-provided Registered Program Identification Number (RPIN) in which this account is enrolled. The RPINs product ID in the Visa system must match the product ID provided in the web service call. Format: String; numeric; max length 6 characters.
                            action:
                              type: string
                              description: >-
                                (REQUIRED if rpinEnrollment segment is present) 

                                 Action for RPIN Enrollment. Format: It is one of the following values: 

                                Add Use Add when submitting new card numbers;
                                record is for a new account number. All required
                                fields must be provided.


                                Change Use if changing any attribute in
                                rpinEnrollment data. A change record will fully
                                replace all data in the original record. Every
                                required field must be submitted in a change
                                record. If issuers wish to preserve previously
                                submitted optional data, this data must be
                                resubmitted.


                                Delete Use if removing an account number. For
                                delete records, all other fields are optional.
                            accountOpenDate:
                              maxLength: 10
                              type: string
                              description: |-
                                (REQUIRED if rpinEnrollment segment is present) 

                                  The date the account number was first opened with the issuer. Format: String in the form of YYYYMMDD.
                            rpinEffectiveDate:
                              maxLength: 10
                              type: string
                              description: >-
                                (Optional) The RPIN effective date, which can be
                                a past or future date, but it must be a date
                                that is after the RPIN create-date and before
                                the RPIN end-date. If the date does not follow
                                these rules, the request is rejected with an
                                Invalid Date reject reason. It will default to
                                the current date if the correct date is not
                                provided. Format: String; YYYYMMDD.
                          description: >-
                            Optional. Contains information to enroll the account
                            number in a given Registered Program Identification
                            Number (RPIN). This field is not required when
                            sending request only for linking or replacement.
                        replaceEnrollment:
                          type: object
                          properties:
                            linkReasonCode:
                              maxLength: 1
                              type: string
                              description: >-
                                (Conditional) The reason for replacement.
                                Format: It is one of the following values: 

                                 L Lost: Consumer reports the card has been lost.  
                                 S Stolen: Consumer reports the card has been stolen.  
                                 U Upgrade/Downgrade: Consumer has been issued a new product.  
                                 O Other: Used when no other value applies.  
                                 C Converted  
                                 R Reissued  
                                 N Not known
                            unlinkIndicator:
                              maxLength: 1
                              type: string
                              description: >-
                                (Conditional) Unlink indicator. This must be set
                                to Y when deleting a replacement relationship.
                                Format: It is one of the following values: 

                                 Y User is trying to unlink the account number
                            oldAccountNumber:
                              maxLength: 19
                              type: string
                              description: >-
                                (REQUIRED if replaceEnrollment segment is
                                present) 

                                  A valid account number specifying the card is being replaced by the card number in the Account Number field.
                          description: >-
                            Optional. Contains information about card
                            replacement for the account number. This information
                            can be sent independently of other structures such
                            as rpinEnrollment or linkEnrollment
                        customerContactInfo:
                          type: object
                          properties:
                            email:
                              maxLength: 100
                              type: string
                              description: >-
                                (Conditional) Account holders email address.
                                Required when prefMethodOfContact is E.
                            action:
                              type: string
                              description: >-
                                (REQUIRED if customerContactInfo segment is
                                present) 

                                  If an action other than Add is selected, the webservice call will be rejected. 

                                 Format: It is one of the following values: 

                                 Add Use this to add new customer information. All required fields must be provided.
                            address:
                              type: object
                              properties:
                                zip:
                                  maxLength: 5
                                  type: string
                                  description: >-
                                    (Conditional) Account holders zipcode.
                                    Required for the US, but can be left blank
                                    for a non-US address. Format: String;
                                    numeric.
                                city:
                                  maxLength: 30
                                  type: string
                                  description: >-
                                    (REQUIRED if customerContactInfo segment is
                                    present) 

                                     City associated with the account holders address. Format: String; alphanumeric; UTF-8, white space, carat (^), period (.), single quote (), asterisk (*), and hyphen (-) are allowed.
                                line1:
                                  maxLength: 40
                                  type: string
                                  description: >-
                                    (Required) First line associated with the
                                    account holders address. Format: String;
                                    alphanumeric; UTF-8, white space, comma (,),
                                    underscore (_), hashtag (#), colon (:),
                                    forward slash (/), period (.), single quote
                                    (), asterisk (*), and hyphen (-) are
                                    allowed.
                                line2:
                                  maxLength: 40
                                  type: string
                                  description: >-
                                    (Optional) Second line associated with the
                                    account holders address. Format: String;
                                    alphanumeric; UTF-8, white space, comma (,),
                                    underscore (_), hashtag (#), colon (:),
                                    forward slash (/), period (.), single quote
                                    (), asterisk (*), and hyphen (-) are
                                    allowed.
                                state:
                                  maxLength: 2
                                  type: string
                                  description: >-
                                    (Conditional) State or province code
                                    associated with the account holders
                                    address. Required for the US, but can be
                                    left blank for a non-US address. Example: NY
                                    Format: String; ISO 3166-2.
                                companyName:
                                  maxLength: 40
                                  type: string
                                  description: >-
                                    (Conditional) Account holders company name.
                                    Format: String; alphanumeric; UTF-8, white
                                    space, comma (,), underscore (_), hashtag
                                    (#), colon (:), forward slash (/), period
                                    (.), single quote (), and hyphens (-) are
                                    allowed.
                              description: >-
                                (Optional) Address details for the account
                                holder.
                            lastName:
                              maxLength: 25
                              type: string
                              description: >-
                                (REQUIRED if customerContactInfo segment is
                                present) 

                                  Account holders last name.
                            firstName:
                              maxLength: 15
                              type: string
                              description: >-
                                (REQUIRED if customerContactInfo segment is
                                present) 

                                  Account holders first name.
                            namePrefix:
                              maxLength: 5
                              type: string
                              description: (Optional) Account holders name prefix.
                            nameSuffix:
                              maxLength: 5
                              type: string
                              description: (Optional) Account holders name suffix.
                            mobileNumber:
                              maxLength: 10
                              type: string
                              description: >-
                                (Conditional) Account holders telephone number.
                                Required when prefMethodOfContact is C.
                            middleInitial:
                              maxLength: 1
                              type: string
                              description: (Optional) Account holders middle initial.
                            prefMethodOfContact:
                              maxLength: 1
                              type: string
                              description: >-
                                (Optional) Account holders preferred method of
                                contact; if a space or an empty string is
                                specified, the preferred method of contact is no
                                preference. 
                                 Format: It is one of the following values: M Physical mail. 
                                 E E mail. 
                                  C Mobile telephone.
                          description: >-
                            Optional, Contains account-number-specific
                            information such as name and address. It is only
                            accepted for certain Visa Product IDs but ignored
                            for all other product IDs. When specified, it must
                            have the accompanying rpinEnrollment structure in
                            its entirety.
                updateReferenceID:
                  maxLength: 32
                  type: string
                  description: >-
                    Reference ID that is needed to track all account level
                    updates.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Accepted. Request successfully persisted to queue.
        '400':
          description: Bad request. Incorrect parameters supplied.
        '500':
          description: Internal Server Error.
      x-operationVersions:
        - label: v2 - Latest
          operationPointer: '#/paths/~1vcpe~1v2~1pan~1enrollment/post'
          default: false
      x-hideTryIt: true
components:
  schemas:
    date:
      type: string
      description: Date in GMT
      format: date
    Locale:
      title: Locale
      maxLength: 12
      minLength: 2
      pattern: ([a-zA-Z]{2,8})-([a-zA-Z]{2}|[0-9]{3})
      type: string
      description: >
        Locale in in [IETF BCP 47 format](https://tools.ietf.org/html/bcp47)

        The BCP 47 locale format is <Language Subtag>-<Extended Language Subtag
        (Optional)>-<Script Subtag (Optional)>-<Region Subtag
        (Optional)>-<Variant1 Subtag (Optional)>-<Variant2 Subtag (Optional)>

        However, only following locale formats are supported by VCPE API:

        <Language Subtag>-<Region Subtag>

        Language Subtag: [a-zA-Z]{2,8}

        Region Subtag: [a-zA-Z]{2} | [0-9]{3}
      example: en-US
    dateTime:
      type: string
      description: date Time in GMT
      format: date-time
      example: '2017-07-21T17:32:28Z'
    StandardError:
      title: Standard Error Response Structure
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          $ref: '#/components/schemas/ErrorResponse'
      description: >-
        API errors are reported using a Standard Error Response structure. All
        errors are categorized into Standard errors and Business errors.
        Standard errors can be returned by any API and should be handled in a
        common way. Business errors are returned only by some APIs and are
        documented for each API.
    InvalidRpin:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - INVALID_RPIN
        errorCode:
          type: string
          enum:
            - '2'
        invalidRpin:
          $ref: '#/components/schemas/rpin'
    RpinAttributes:
      title: RPIN Metadata Details
      type: object
      properties:
        rpin:
          $ref: '#/components/schemas/rpin'
        country:
          type: string
          description: The country to which the RPIN belongs
          example: '036'
        endDate:
          $ref: '#/components/schemas/date'
        rpinBid:
          $ref: '#/components/schemas/bid'
        rpinName:
          type: string
          description: The RPIN Name.
          example: VTR Premium
        vertical:
          type: string
          description: The Vertical type
          format: enum
          example: CASHBACK
          enum:
            - CASHBACK
            - COHOTEL
            - COAIRLINE
            - COGAS
            - CORETAIL
            - COAUTO
            - COENTERTAIN
            - COAFFINITY
            - COFINSERV
            - COOTHER
            - COTRAVELSVC
            - GENOTHER
            - GENTRAVEL
            - GENWEALTH
        startDate:
          $ref: '#/components/schemas/date'
        cardCounts:
          type: number
          description: Cards enrolled in the RPIN.
          format: integer
          example: 1000000
        programBid:
          $ref: '#/components/schemas/bid'
        rpinStatus:
          type: string
          description: Status of teh RPIN.
          format: enum
          example: CMF
          enum:
            - ACTIVE
            - PENDING
            - CHANGEPENDING
            - DEACTIVATED
            - DEACTIVATION_PENDING
            - REJECTED
            - APPROVED
        spendRules:
          type: array
          items:
            type: object
            properties:
              spendRuleName:
                type: string
                description: Name of Spend Rules associated with RPIN.
                example: 'FRC_SPEND '
        programName:
          type: string
          description: The Program to which RPIN is associated
          example: VTR Premium
        programType:
          type: string
          description: The Program type
          format: enum
          example: VTR Premium
          enum:
            - COBRAND
            - GEN_REWARDS
            - NON_REWARDS
            - CASH
        rpinBidName:
          $ref: '#/components/schemas/bidName'
        rpinCobrand:
          type: string
          description: The Cobrand or Affinity for the RPIN.
          example: Grocery
        rpinMetadata:
          type: array
          items:
            type: object
            properties:
              attributeTagName:
                type: string
                description: UBID for the PAN's range. 8 in length.
                format: enum
                example: PORTFOLIO
                enum:
                  - PORTFOLIO
                  - PROGRAM_SUB_CAT
                  - VERTICAL_SUB_CAT
                  - LOC
                  - CCP_ENABLED
                  - VIRTUAL
                  - REPORTING
                  - SECURED_CRD
                  - AUTOREG
              attributeTagValue:
                type: string
                description: Value of the tag.
                format: string
        rpinProductId:
          $ref: '#/components/schemas/productId'
        rpinRefNumber:
          type: string
          description: The RPIN Reference Number.
          example: 0047890ABN
        programBidName:
          $ref: '#/components/schemas/bidName'
        accountRangeAssoc:
          type: array
          items:
            type: object
            properties:
              arMax:
                type: string
                description: Account Range Maximum.
                format: string
              arMin:
                type: string
                description: Account Range Minimum.
                format: string
              autoRegAR:
                type: string
                description: If the account range registered is due to auto registration.
                format: boolean
              endDateOfAssoc:
                $ref: '#/components/schemas/date'
              starteDateOfAssoc:
                $ref: '#/components/schemas/date'
        lastCardEnrollDate:
          $ref: '#/components/schemas/date'
    CardAttributesDoc:
      title: Card Attribute Details
      type: object
      properties:
        pan:
          $ref: '#/components/schemas/pan'
        portfolio:
          $ref: '#/components/schemas/CardPortfolioDetails'
        linkDetails:
          $ref: '#/components/schemas/LinkDetails'
        updateChannel:
          $ref: '#/components/schemas/updateChannel'
        processingDetails:
          $ref: '#/components/schemas/ProcessingDetails'
        replacementDetails:
          $ref: '#/components/schemas/ReplacementDetails'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/dateTime'
    ProcessingDetails:
      title: Processing Details
      type: object
      properties:
        cardProcProductId:
          $ref: '#/components/schemas/productId'
        spendQualifiedIndicator:
          type: string
          description: Spend Qualified Indicator
          format: enum
          example: 'N'
          enum:
            - 'N'
            - B
            - Q
    InvalidPage:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - INVALID_PAGE
        errorCode:
          type: string
          enum:
            - '00011'
        invalidPage:
          $ref: '#/components/schemas/page'
    CardInfov1:
      title: Card Attribute Details
      type: object
      properties:
        sourceChannel:
          $ref: '#/components/schemas/updateChannel'
        lastAttrUpdateDate:
          $ref: '#/components/schemas/lastAttrUpdateDate'
    infoType:
      type: string
      description: >
        Specify if caller is interested only in specific datasets. If not
        specified, system will return all the data without filtering. Enum value
        will display attributes as follows:

        <li>PORTFOLIO - Will return RPIN enrollment details - RPIN, Account Open
        Date, RPIN effective date</li>

        <li>REPLACEMENT - Will return the complete replacement chain with
        sequence number to indicate oldest to newest card in teh repalcement
        chain</li>

        <li>LINK - Will return all link relationships this card is part of.
        Details of relationship will include teh link group ID, link group name,
        and flag to indicate card's primary status in the relationship</li>
      format: enum
      example: PORTFOLIO
      enum:
        - PORTFOLIO
        - REPLACEMENT
        - LINK
    LinkDetails:
      title: Link group Details for queried PAN
      type: array
      items:
        type: object
        properties:
          groupId:
            type: string
            description: Group ID for the group
            example: New Fexible Pay Debit
          groupType:
            type: string
            description: Group Type that the card is enrolled in
            format: enum
            example: CUSTOMER
            enum:
              - LOC
              - USHNW
              - USCROSSPROD
              - CUSTOMER
          pansInGrp:
            type: array
            description: Other PANs in the group
            items:
              $ref: '#/components/schemas/pan'
          isPrimaryFlag:
            type: string
            description: Flag indicates if the card is primary in the group.
            format: boolean
            example: 'true'
    CardAccountRangeDetails-1:
      title: Issuer Level Details for the Card's Account Range
      type: object
      properties:
        bin:
          type: string
          description: >-
            The BIN associated to the PAN's account range. Can be 6 or 8 in
            length.
          example: '400003'
        lbid:
          $ref: '#/components/schemas/bid'
        ubid:
          $ref: '#/components/schemas/bid'
        fundingSource:
          type: string
          description: UBID for the PAN's range. 8 in length.
          format: enum
          example: C
          enum:
            - C
            - D
            - P
        issuerInitiatedALP:
          type: string
          description: Issuer has initiated Account level processing for the account range.
          format: boolean
          example: 'true'
        accountRangeProductId:
          $ref: '#/components/schemas/productId'
    rpin:
      type: string
      description: >-
        Registered Program Identification Number. 6 in length. RPIN has metadata
        associated with it that can be retrieved by the get GetAttributes API
        call.
      example: '009065'
    EncryptedAccountNumber-1:
      title: Encrypted Personal Account Number (PAN or Card Number)
      type: string
      description: >
        JWE<AccountNumber> - This is a URL-safe base64-encoded string that
        represents the encrypted payload for AccountNumber.

        The format is the JSON Web Encryption using asymmetric/symmetric key
        material made available at time of onboarding. 

        It is a standard JWT with a single custom AccountNumber claim,
        accountNumber that contains the card number/PAN.


        Visa uses JSON Web Encryption (JWE) to encrypt sensitive information in
        APIs. For more info, see "Encryption (JWE) Details".
      format: byte
    CardAccountRangeDetails:
      title: Issuer Level Details for the Card's Account Range
      type: object
      properties:
        bin:
          type: string
          description: >-
            The BIN associated to the PAN's account range. Can be 6 or 8 in
            length.
          example: '400003'
        lbid:
          $ref: '#/components/schemas/bid'
        ubid:
          $ref: '#/components/schemas/bid'
        fundingSource:
          type: string
          description: UBID for the PAN's range. 8 in length.
          format: enum
          example: C
          enum:
            - C
            - D
            - P
        issuerInitiatedALP:
          type: string
          description: Issuer has initiated Account level processing for the account range.
          format: boolean
          example: 'true'
        accountRangeProductId:
          $ref: '#/components/schemas/productId'
    lastAttrUpdateDate:
      type: string
      description: Date when last time the card attribute was updated.
      example: '2022-07-14'
    CardAttributesDoc-1:
      title: Card Attribute Details
      type: object
      properties:
        pan:
          $ref: '#/components/schemas/pan'
        portfolio:
          $ref: '#/components/schemas/CardPortfolioDetails'
        linkDetails:
          $ref: '#/components/schemas/LinkDetails'
        updateChannel:
          $ref: '#/components/schemas/updateChannel'
        processingDetails:
          $ref: '#/components/schemas/ProcessingDetails-1'
        replacementDetails:
          $ref: '#/components/schemas/ReplacementDetails'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/dateTime'
    vdpExternalAppId:
      type: string
      description: internal_unique_id_per_enviroment GUID.
      example: 0047890ABN
    updateChannel:
      type: string
      description: Channel from which update was done.
      format: enum
      example: API
      enum:
        - API
        - CMF
        - AUTOREG
    pan:
      title: PAN / Account Number / Card Number
      maxLength: 19
      minLength: 13
      type: integer
      description: PAN / Account Number / Card Number of the card to be enrolled
    BasePage:
      title: Pagination API Response
      type: object
      properties:
        last:
          title: Is this the last page?
          type: boolean
        empty:
          title: Is this an empty page?
          type: boolean
        first:
          title: Is this the first page?
          type: boolean
        number:
          title: Page Number
          minimum: 1
          type: integer
        totalCount:
          title: Total number of results across all pages
          type: integer
        totalPages:
          title: Total number of pages across
          type: integer
        resultsCount:
          title: Number of results in this page
          type: integer
    bidName:
      type: string
      description: The Issuer Name associated to the PAN's account range.
      example: Test Bank
    CardAttributesPortProcDoc:
      title: Card Attribute Details
      type: object
      properties:
        CardInfo:
          $ref: '#/components/schemas/CardInfov1'
        RPINInfo:
          $ref: '#/components/schemas/RPINInfov1'
        panlast4:
          $ref: '#/components/schemas/panlast4'
    InvalidSize:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - INVALID_SIZE
        errorCode:
          type: string
          enum:
            - '00012'
        invalidSize:
          $ref: '#/components/schemas/size'
    InvalidInfoType:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - INVALID_INFO_TYPE
        errorCode:
          type: string
          enum:
            - '9.0'
        invalidInfoType:
          $ref: '#/components/schemas/infoType'
    productId:
      type: string
      description: Product ID
      example: A
    ServerError:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - SERVER_ERROR
        errorCode:
          type: string
          enum:
            - '00013'
        serverError:
          type: string
          default: Server Error
    PaymentAccountReference:
      title: PAR / Payment Account Reference
      maxLength: 29
      minLength: 29
      type: string
      description: >
        A Payment Account Reference (PAR) is a unique reference value associated
        with a specific card holder PAN. It identifies the card account, not
        just a card.

        PAR is a non-payment identifier that can be associated to PANs and
        tokens, as defined by EMVCo.  PAR allows all participants in the
        payments chain to have a single, non-sensitive value assigned to a
        consumer. This value can be used in place of sensitive card holder
        identification fields, and transmitted across the payments ecosystem to
        facilitate card holder identification.

        PAR has a well-defined format (as per the Jan 2016 EMVCo documentation):

        - Fixed length of 29 characters

        - All Uppercase, Roman, & Alphanumeric values

        - 4-character BIN Controller ID assigned by EMVCo followed by a
        25-character value
    InvalidPan:
      type: object
      properties:
        result:
          type: boolean
          enum:
            - false
        errorMsg:
          type: string
          enum:
            - INVALID_PAN
        errorCode:
          type: string
          enum:
            - '8.0'
        invalidPan:
          $ref: '#/components/schemas/pan'
    ProcessingDetails-1:
      title: Processing Details
      type: object
      properties:
        cardProcProductId:
          $ref: '#/components/schemas/productId'
        spendQualifiedIndicator:
          type: string
          description: Spend Qualified Indicator
          format: enum
          example: 'N'
          enum:
            - 'N'
            - B
            - Q
    ErrorResponse:
      required:
        - reason
      type: object
      properties:
        reason:
          type: string
          description: >-
            API developers must use this field to drive their error handling
            logic
          example: invalidRequest
        status:
          maximum: 600
          minimum: 100
          type: integer
          description: 3-digit HTTP Status Code
          example: 400
        details:
          type: array
          description: >-
            Array of fields - Data validation errors should use this array to
            specify  fields that failed validation using the location field
          items:
            required:
              - location
            type: object
            properties:
              reason:
                type: string
                description: The specific reason for this error
                example: Must be a numeric value
              message:
                type: string
                description: The specific error for this field
                example: Must be a non-empty value
              location:
                type: string
                description: >-
                  The value of this field is using an expression to point to a
                  field that failed validation
                example: pan
        message:
          type: string
          description: >-
            Every error should have a human readable message describing the
            error. The message can very even for the same reason, thus providing
            additional details. API providers are free to change the message at
            any point of time. API clients should not use the message field to
            drive their business logic or to expose it directly to the consumers
            via UI or other means.
          example: Input parameters validation failed
      description: Standard Error Response Body
    rpinRefNumber:
      type: string
      description: The RPIN Reference Number.
      example: 0047890ABN
    size:
      type: integer
      description: Number of results per page
      format: integer
      example: 10
    panlast4:
      type: string
      description: Last 4 digits of PAN number.
      format: string
      example: '0'
    ErrorResponseReg:
      required:
        - responseCode
        - responseMessage
      type: object
      properties:
        responseCode:
          maximum: 600
          minimum: 100
          type: integer
          description: 3-digit HTTP Status Code
          example: 400
        responseMessage:
          type: string
          description: >-
            Every error should have a human readable message describing the
            error. The message can very even for the same reason, thus providing
            additional details. API providers are free to change the message at
            any point of time. API clients should not use the message field to
            drive their business logic or to expose it directly to the consumers
            via UI or other means.
          example: Input parameters validation failed
      description: Standard Error Response Body of registration
    EncryptedAccountNumber:
      title: Encrypted Personal Account Number (PAN or Card Number)
      type: string
      description: >
        JWE<AccountNumber> - This is a URL-safe base64-encoded string that
        represents the encrypted payload for AccountNumber.

        The format is the JSON Web Encryption using asymmetric/symmetric key
        material made available at time of onboarding. 

        It is a standard JWT with a single custom AccountNumber claim,
        accountNumber that contains the card number/PAN.


        Visa uses JSON Web Encryption (JWE) to encrypt sensitive information in
        APIs. For more info, see "Encryption (JWE) Details".
      format: byte
    ReplacementDetails:
      title: Replacement Chain Details
      type: array
      items:
        type: object
        properties:
          pan:
            $ref: '#/components/schemas/pan'
          seqNo:
            type: number
            description: >-
              The sequence number of the card in teh chain - 1 being the
              earliest.
            format: integer
    RPINInfov1:
      title: Card Portfolio Details
      type: object
      properties:
        rpin:
          $ref: '#/components/schemas/rpin'
        rpinProductId:
          $ref: '#/components/schemas/productId'
        rpinReferenceNumber:
          $ref: '#/components/schemas/rpinRefNumber'
    page:
      type: integer
      description: Results page to retrieve
      format: integer
      example: 10
    bid:
      type: string
      description: >-
        The User Business Identification number that is associated to the PAN's
        account range. Length 8.
      example: '10000001'
    additionalAttributes:
      title: Additional Attributes provided in registration
      type: array
      items:
        type: object
        properties:
          key:
            type: string
            description: Name of the Attribute
            example: BID
          value:
            type: string
            description: Value of the Attribute
            example: '10041234'
  responses:
    InvalidEntitlementErrorResponse:
      description: |
        API invalid entitlement error caused due to the following reason:
        + Caller not authorized to get the card info.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: Unauthorized
                      status:
                        type: integer
                        example: 402
    InputValidationErrorResponse:
      description: >
        The <code>errorResponse.details</code> part of the error response can
        provide a list of fields that failed data validation constraints and
        errorResponse.reason values for this error include:
          <ul>
          <li><code>invalidHeader</code>APIKey not present in request header OR
          <li><code>invalidHeader</code>X-CORRELATION ID not present in request header OR
          <li><code>invalidHeader</code>Content-Type not present in request header OR
          <li><code>invalidRequest</code>The API server could not understand the request; for example, the field is not in a particular format,like PAN is not numeric/has less than 13 digits etc.
          </ul>
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: invalidRequest
                      status:
                        type: integer
                        example: 400
    ConflictError:
      description: Conflict
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: Duplicate Data
                      status:
                        type: integer
                        example: 409
    APINoLongerSupportedError:
      description: >
        Gone - Indicates that the resource at this end point is no longer
        available. 

        This is usually returned for old API versions that are not available
        anymore - EOL (End-of-Life). The content-type header in the response
        indicates the latest supported API version.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: Gone
                      status:
                        type: integer
                        example: 410
    EntryPresentErrorResponse:
      description: The specified VDP External APP ID is already present
      headers:
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponseReg'
    ForbiddenErrorResponse:
      description: >
        The 403 (Forbidden) HTTP Status code indicates that this consumer does
        not have permission to access the requested resource. 

        This can happen if you are trying to invoke an API request for a
        resource that is not allowed.


        Check for the following:
          + Your API Key is valid one.
          + You API Key is onboarded.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: Forbidden
                      status:
                        type: integer
                        example: 403
    InternalServerError:
      description: >
        Internal Server Error.


        Please contact VCPE Support at GDLVCPEAPIPRE@visa.com with a complete
        error message, full http request and response details.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: serviceError
                      status:
                        type: integer
                        example: 501
    TooManyRequestsError:
      description: >
        The VCPE CAQ project has clocked too many requests in a given amount of
        time. 


        Please contact VCPE Support at GDLVCPEAPIPRE@visa.com if you want to
        increase the time limits.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: rateLimitExceeded
                      status:
                        type: integer
                        example: 429
    NotAcceptableContentError:
      description: >
        Not Acceptable - Indicates that the "Accept:" header field is present in
        a request and none of the available representations for the response
        have a media type that is listed as acceptable.


        This can happen when the requested API version is not available or
        unsupported; for example, when the version requested in the Accept:
        header is newer than the currently live/supported version.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: NotAcceptable
                      status:
                        type: integer
                        example: 406
    BaseErrorResponse:
      description: Default Error Response
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardError'
    ServiceUnavailableError:
      description: >
        The Visa system is currently unable to handle the request due to a
        temporary overloading or maintenance of the server.


        There may be a Retry-After header field to suggest an appropriate amount
        of time for the client to wait before retrying the request.

        The value of this field can be either an HTTP-date or a number of
        seconds to delay after the response is received.

        <code>Retry-After = HTTP-date || delay-seconds</code>

        examples:

        + <code>Retry-After: Thu, 31 Dec 2020 23:59:59 GMT</code>

        + <code>Retry-After: 120</code>


        Please contact Visa Support at developer@visa.com if the issue persists.
      headers:
        Retry-After:
          $ref: '#/components/headers/RetryAfterHeaderInResponse'
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: notReady
                      status:
                        type: integer
                        example: 503
    NotFoundErrorResponse:
      description: The specified PAN was not found
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: notFound
                      status:
                        type: integer
                        example: 404
    UnauthorizedErrorResponse:
      description: >
        The 401 (Unauthorized) HTTP Status code indicates that this consumer
        does not have permission to access the requested resource. 

        This can happen if you are trying to invoke an API request for a
        resource that is not allowed.


        Check for the following:
          + Your API Key is valid one.
          + You API Key is onboarded.
      headers:
        x-api-version:
          $ref: '#/components/headers/VersionInResponse'
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StandardError'
              - properties:
                  errorResponse:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: Unauthorized
                      status:
                        type: integer
                        example: 401
    InputValidationErrorRegResponse:
      description: >
        The <code>errorResponse.details</code> part of the error response can
        provide a list of fields that failed data validation constraints and
        errorResponse.reason values for this error include:
          <ul>
          <li><code>invalidHeader</code>X-CORRELATION ID not present in request header OR
          <li><code>invalidRequest</code>The API server could not understand the request; for example, key contains unrecognized value or "value" has unrecognized entry.
          </ul>
      headers:
        x-correlation-id:
          $ref: '#/components/headers/TraceHeaderInResponse'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponseReg'
  parameters:
    VersionInRequest:
      name: x-api-version
      in: header
      description: >-
        Version ID for every API request - a mandatory header. To be used by
        every API-Client to inform which version of API to be used.
      required: true
      explode: false
      schema:
        maxLength: 4
        minLength: 1
        type: string
    rpinRefNumber:
      name: RPIN Reference number
      in: query
      description: The RPIN rederence number for which details are being queries.
      required: false
      explode: true
      schema:
        type: string
        description: The RPIN Reference Number for which details are being queries.
        example: '044019876'
    AccpetInRequest:
      name: Accept
      in: header
      description: Types of content that are acceptable for the request.
      required: true
      explode: false
      schema:
        type: string
    TraceHeaderInRequest:
      name: x-correlation-id
      in: header
      description: >-
        Unique ID for every API request - a mandatory header. Generated by the
        API client. Used for end-to-end tracing/debugging.
      required: true
      explode: false
      schema:
        maxLength: 36
        minLength: 1
        type: string
    size:
      name: size
      in: query
      description: Number of result sets the caller wants.
      required: false
      explode: true
      schema:
        type: string
        description: Number of result sets the caller wants
        example: '20'
    productId:
      name: Product ID of the RPIN
      in: query
      description: The product ID of teh RPIN for which we are querying.
      required: false
      explode: true
      schema:
        type: string
        description: The product ID corresponding to the RPIN.
        example: A
    rpin:
      name: rpin
      in: query
      description: The RPIN for which details are being queries.
      required: false
      explode: true
      schema:
        type: string
        description: The RPIN for which details are being queries.
        example: '004532'
    ContentTypeInRequest:
      name: Content-Type
      in: header
      description: >-
        The type of the request body. Not required if the message body is empty
        in the request, for example, Application/json
      required: true
      explode: false
      schema:
        maxLength: 36
        minLength: 1
        type: string
    page:
      name: page
      in: query
      description: The page that the caller wants the results for.
      required: false
      explode: true
      schema:
        type: integer
        description: The page that the caller wants the results for.
        example: 2
    APIKeyInRequest:
      name: x-api-key
      in: header
      description: Client-specific API key issued during onboarding.
      required: true
      explode: false
      schema:
        maxLength: 64
        minLength: 1
        type: string
  examples: {}
  requestBodies: {}
  headers:
    VersionInResponse:
      description: Version ID for every API response ; x-api-version is echoed back.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 4
        minLength: 1
        type: string
    RetryAfterHeaderInResponse:
      description: >
        Header field to suggest an appropriate amount of time for the client to
        wait before retrying the request, typically after a 503 error or after a
        batch request when the batch job is not completed.

        The value of this field can be either an HTTP-date or a number of
        seconds to delay after the response is received.

        <code>Retry-After = HTTP-date || delay-seconds</code>

        examples:

        + <code>Retry-After: Thu, 31 Dec 2020 23:59:59 GMT</code>

        + <code>Retry-After: 120</code>
      style: simple
      explode: false
      schema:
        maxLength: 30
        minLength: 1
        type: string
    TraceHeaderInResponse:
      description: >-
        Unique ID for the API response; x-correlation-id is echoed back. Used
        for end-to-end tracing/debugging.
      style: simple
      explode: false
      schema:
        maxLength: 36
        minLength: 1
        type: string
  callbacks: {}
x-tagGroups:
  - name: API Reference
    tags:
      - 'Visa Card Program Enrollment '
